import csv
import json
import requests 

# defining the api-endpoint  
API_ENDPOINT = "http://localhost:5000/artifacts/new"
API_ENDPOINT2 = "http://localhost:5000/new/artifactImage"
API_ENDPOINT3 = "http://localhost:5000/artifact/lastAdded"
CREATE_SCRIPTS = """
-- MySQL Script generated by MySQL Workbench
-- Tue Oct  8 20:54:21 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;
-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;
-- -----------------------------------------------------
-- Table `mydb`.`FamilyMember`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`FamilyMember` ;
CREATE TABLE IF NOT EXISTS `mydb`.`FamilyMember` (
  `FamilyMemberID` INT NOT NULL AUTO_INCREMENT,
  `Firstname` VARCHAR(45) NULL,
  `Lastname` VARCHAR(45) NULL,
  `MaidenName` VARCHAR(45) NULL,
  `DODYear` INT NULL,
  `DODMonth` INT NULL,
  `DODDay` INT NULL,
  `DOBYear` INT NULL,
  `DOBMonth` INT NULL,
  `DOBDay` INT NULL,
  `Gender` ENUM('m','f') NULL,
  `ProfilePic` MEDIUMBLOB NULL,
  `AccuracyDOD` ENUM('documented', 'accurate', 'likely') NULL,
  `AccuracyDOB` ENUM('documented', 'likely', 'accurate') NULL,
  PRIMARY KEY (`FamilyMemberID`))
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `mydb`.`Artifact`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Artifact` ;
CREATE TABLE IF NOT EXISTS `mydb`.`Artifact` (
  `ArtifactID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(999) NULL,
  `Geotag` VARCHAR(45) NULL,
  `Tags` LONGTEXT NULL,
  `DateAddedYear` INT NULL,
  `DateAddedMonth` INT NULL,
  `DateAddedDay` INT NULL,
  `DateAcquireYear` INT NULL,
  `DateAcquireMonth` INT NULL,
  `DateAcquireDay` INT NULL,
  `AccuracyAcquire` ENUM('documented', 'accurate', 'likely') NULL,
  `Description` LONGTEXT NULL,
  `Heir` INT NULL,
  `CurrentOwner` INT NOT NULL,
  `Type` ENUM('physical', 'letter', 'postcard', 'photo') NOT NULL,
  PRIMARY KEY (`ArtifactID`),
  INDEX `fk_Artifact_User1_idx` (`Heir` ASC),
  INDEX `fk_Artifact_User2_idx` (`CurrentOwner` ASC),
  CONSTRAINT `fk_Artifact_User1`
    FOREIGN KEY (`Heir`)
    REFERENCES `mydb`.`FamilyMember` (`FamilyMemberID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Artifact_User2`
    FOREIGN KEY (`CurrentOwner`)
    REFERENCES `mydb`.`FamilyMember` (`FamilyMemberID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `mydb`.`ArtifactImage`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`ArtifactImage` ;
CREATE TABLE IF NOT EXISTS `mydb`.`ArtifactImage` (
  `ArtifactImageID` INT NOT NULL AUTO_INCREMENT,
  `Image` BLOB NOT NULL,
  `Caption` LONGTEXT NULL,
  `FilePath` VARCHAR(1024) NULL,
  `Artifact_ArtifactID` INT NOT NULL,
  PRIMARY KEY (`ArtifactImageID`),
  INDEX `fk_ArtifcatImage_Artifact1_idx` (`Artifact_ArtifactID` ASC),
  CONSTRAINT `fk_ArtifcatImage_Artifact1`
    FOREIGN KEY (`Artifact_ArtifactID`)
    REFERENCES `mydb`.`Artifact` (`ArtifactID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `mydb`.`PhysicalObjects`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`PhysicalObjects` ;
CREATE TABLE IF NOT EXISTS `mydb`.`PhysicalObjects` (
  `ObjectID` INT NOT NULL AUTO_INCREMENT,
  `Type` ENUM('bigobject', 'smallobject', 'document', 'artwork', 'miscellanious') NOT NULL,
  `SpecialAttributes` LONGTEXT NULL,
  `Artifact_ArtifactID` INT NOT NULL,
  PRIMARY KEY (`ObjectID`, `Artifact_ArtifactID`),
  INDEX `fk_PhysicalObjects_Artifact1_idx` (`Artifact_ArtifactID` ASC),
  CONSTRAINT `fk_PhysicalObjects_Artifact1`
    FOREIGN KEY (`Artifact_ArtifactID`)
    REFERENCES `mydb`.`Artifact` (`ArtifactID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `mydb`.`Photo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Photo` ;
CREATE TABLE IF NOT EXISTS `mydb`.`Photo` (
  `PhotoID` INT NOT NULL AUTO_INCREMENT,
  `Postmark` VARCHAR(45) BINARY NULL,
  `Artifact_ArtifactID` INT NOT NULL,
  PRIMARY KEY (`PhotoID`, `Artifact_ArtifactID`),
  INDEX `fk_Photo_Artifact1_idx` (`Artifact_ArtifactID` ASC),
  CONSTRAINT `fk_Photo_Artifact1`
    FOREIGN KEY (`Artifact_ArtifactID`)
    REFERENCES `mydb`.`Artifact` (`ArtifactID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `mydb`.`PostCard`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`PostCard` ;
CREATE TABLE IF NOT EXISTS `mydb`.`PostCard` (
  `PostCardID` INT NOT NULL AUTO_INCREMENT,
  `SenderAddress` VARCHAR(100) NULL,
  `ReceiverAddress` VARCHAR(100) NULL,
  `Sender` VARCHAR(45) NULL,
  `Receiver` VARCHAR(45) NULL,
  `CoverPicture` MEDIUMBLOB NULL,
  `Artifact_ArtifactID` INT NOT NULL,
  PRIMARY KEY (`PostCardID`, `Artifact_ArtifactID`),
  INDEX `fk_PostCard_Artifact1_idx` (`Artifact_ArtifactID` ASC),
  CONSTRAINT `fk_PostCard_Artifact1`
    FOREIGN KEY (`Artifact_ArtifactID`)
    REFERENCES `mydb`.`Artifact` (`ArtifactID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `mydb`.`Letter`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Letter` ;
CREATE TABLE IF NOT EXISTS `mydb`.`Letter` (
  `LetterID` INT NOT NULL AUTO_INCREMENT,
  `Aerogramme` TINYINT(1) NOT NULL,
  `Telegram` TINYINT(1) NOT NULL,
  `SenderAddress` VARCHAR(100) NULL,
  `ReceiverAddress` VARCHAR(100) NULL,
  `Sender` VARCHAR(45) NULL,
  `Receiver` VARCHAR(45) NULL,
  `Envelope` MEDIUMBLOB NULL,
  `Artifact_ArtifactID` INT NOT NULL,
  PRIMARY KEY (`LetterID`, `Artifact_ArtifactID`),
  INDEX `fk_Letter_Artifact1_idx` (`Artifact_ArtifactID` ASC),
  CONSTRAINT `fk_Letter_Artifact1`
    FOREIGN KEY (`Artifact_ArtifactID`)
    REFERENCES `mydb`.`Artifact` (`ArtifactID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `mydb`.`Comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Comment` ;
CREATE TABLE IF NOT EXISTS `mydb`.`Comment` (
  `CommentID` INT NOT NULL AUTO_INCREMENT,
  `Comment` LONGTEXT NULL,
  `DatePosted` DATETIME NOT NULL,
  `Author` VARCHAR(45) NULL,
  `ArtifactID` INT NOT NULL,
  PRIMARY KEY (`CommentID`),
  INDEX `fk_Comment_Artifact1_idx` (`ArtifactID` ASC),
  CONSTRAINT `fk_Comment_Artifact1`
    FOREIGN KEY (`ArtifactID`)
    REFERENCES `mydb`.`Artifact` (`ArtifactID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `mydb`.`Relationship`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Relationship` ;
CREATE TABLE IF NOT EXISTS `mydb`.`Relationship` (
  `RelationshipID` INT NOT NULL AUTO_INCREMENT,
  `Individual1` INT NOT NULL,
  `Individual2` INT NOT NULL,
  `RelationshipType` ENUM('child', 'parent', 'spouse', 'grandchild', 'brother', 'sister', 'uncle', 'aunt') NOT NULL,
  `inlaw` ENUM('t', 'f') NULL,
  PRIMARY KEY (`RelationshipID`),
  INDEX `fk_Relationship_User1_idx` (`Individual1` ASC),
  INDEX `fk_Relationship_User2_idx` (`Individual2` ASC),
  CONSTRAINT `fk_Relationship_User1`
    FOREIGN KEY (`Individual1`)
    REFERENCES `mydb`.`FamilyMember` (`FamilyMemberID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Relationship_User2`
    FOREIGN KEY (`Individual2`)
    REFERENCES `mydb`.`FamilyMember` (`FamilyMemberID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `mydb`.`Entity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Entity` ;
CREATE TABLE IF NOT EXISTS `mydb`.`Entity` (
  `EntityID` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  `Type` VARCHAR(45) NULL,
  `Tag` VARCHAR(45) NULL,
  `Artifact_ArtifactID` INT NOT NULL,
  PRIMARY KEY (`EntityID`),
  INDEX `fk_Entity_Artifact1_idx` (`Artifact_ArtifactID` ASC),
  CONSTRAINT `fk_Entity_Artifact1`
    FOREIGN KEY (`Artifact_ArtifactID`)
    REFERENCES `mydb`.`Artifact` (`ArtifactID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `mydb`.`Entity_has_FamilyMember`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Entity_has_FamilyMember` ;
CREATE TABLE IF NOT EXISTS `mydb`.`Entity_has_FamilyMember` (
  `Entity_EntityID` INT NOT NULL,
  `FamilyMember_FamilyMemberID` INT NOT NULL,
  INDEX `fk_Entity_has_FamilyMember_FamilyMember1_idx` (`FamilyMember_FamilyMemberID` ASC),
  INDEX `fk_Entity_has_FamilyMember_Entity1_idx` (`Entity_EntityID` ASC),
  CONSTRAINT `fk_Entity_has_FamilyMember_Entity1`
    FOREIGN KEY (`Entity_EntityID`)
    REFERENCES `mydb`.`Entity` (`EntityID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Entity_has_FamilyMember_FamilyMember1`
    FOREIGN KEY (`FamilyMember_FamilyMemberID`)
    REFERENCES `mydb`.`FamilyMember` (`FamilyMemberID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
USE `mydb`;
DELIMITER $$
USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`FamilyMember_AFTER_DELETE` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`FamilyMember_AFTER_DELETE` AFTER DELETE ON `FamilyMember` FOR EACH ROW
BEGIN
END
$$
DELIMITER ;
SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
INSERT INTO `mydb`.`FamilyMember` (`FamilyMemberID`, `Firstname`, `Lastname`, `MaidenName`, `DODYear`, `DODMonth`, `DODDay`, `DOBYear`, `DOBMonth`, `DOBDay`, `Gender`, `ProfilePic`, `AccuracyDOD`, `AccuracyDOB`) VALUES (1, 'Leon', 'Sterling', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
"""

FILE_PATH = 'artifacts/Copy of Artifact Collection - Physical.csv'
counter = 0

# function to send a post request to insert a new artifact
def send_artifact(artifact):
    r = requests.post(url = API_ENDPOINT, json=artifact) 
    response = r.text 
    print("Artifact Added: %s"%response)

def send_image(artifact):
    r = requests.get(url = API_ENDPOINT3)
    data = r.json()
    json_img = json.loads('{ "filename": "' + artifact['FilePath'] + '", "Caption": "", "lastAdded": "' + str(data['lastAdded']) + '"}')
    print(json_img)
    r = requests.post(url = API_ENDPOINT2 , json=json_img) 
    response = r.text 
    print("Image Upload: %s"%response)
    


with open(FILE_PATH, mode='r') as csv_file:
    csv_reader = csv.DictReader(csv_file)
    line_count = 1
    for row in csv_reader:
        if row['Description'] == '':
            row['Description'] = 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.'
        send_artifact(row)
        send_image(row)
        line_count += 1
    print(f'Processed {line_count - 1} artifacts.')


# def change_keys(artifact){
#     artifact['artifactName'] = dictionary.pop('Name')
#     artifact['desc'] = dictionary.pop('De')
#     artifact['artifactName'] = dictionary.pop('Name')
# }